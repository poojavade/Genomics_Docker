# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('__callback', [dirname(__file__)])
        except ImportError:
            import __callback
            return __callback
        if fp is not None:
            try:
                _mod = imp.load_module('__callback', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    __callback = swig_import_helper()
    del swig_import_helper
else:
    import __callback
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def gsl_function_init(*args, **kwargs):
  return __callback.gsl_function_init(*args, **kwargs)
gsl_function_init = __callback.gsl_function_init

def gsl_function_init_fdf(*args, **kwargs):
  return __callback.gsl_function_init_fdf(*args, **kwargs)
gsl_function_init_fdf = __callback.gsl_function_init_fdf

def gsl_function_free(*args, **kwargs):
  return __callback.gsl_function_free(*args, **kwargs)
gsl_function_free = __callback.gsl_function_free

def gsl_function_free_fdf(*args, **kwargs):
  return __callback.gsl_function_free_fdf(*args, **kwargs)
gsl_function_free_fdf = __callback.gsl_function_free_fdf

def gsl_monte_function_init(*args, **kwargs):
  return __callback.gsl_monte_function_init(*args, **kwargs)
gsl_monte_function_init = __callback.gsl_monte_function_init

def gsl_monte_function_free(*args, **kwargs):
  return __callback.gsl_monte_function_free(*args, **kwargs)
gsl_monte_function_free = __callback.gsl_monte_function_free

def gsl_monte_plain_integrate(*args, **kwargs):
  return __callback.gsl_monte_plain_integrate(*args, **kwargs)
gsl_monte_plain_integrate = __callback.gsl_monte_plain_integrate

def gsl_monte_plain_alloc(*args, **kwargs):
  return __callback.gsl_monte_plain_alloc(*args, **kwargs)
gsl_monte_plain_alloc = __callback.gsl_monte_plain_alloc

def gsl_monte_plain_init(*args, **kwargs):
  return __callback.gsl_monte_plain_init(*args, **kwargs)
gsl_monte_plain_init = __callback.gsl_monte_plain_init

def gsl_monte_plain_free(*args, **kwargs):
  return __callback.gsl_monte_plain_free(*args, **kwargs)
gsl_monte_plain_free = __callback.gsl_monte_plain_free

def pygsl_monte_miser_get_min_calls(*args, **kwargs):
  return __callback.pygsl_monte_miser_get_min_calls(*args, **kwargs)
pygsl_monte_miser_get_min_calls = __callback.pygsl_monte_miser_get_min_calls

def pygsl_monte_miser_get_min_calls_per_bisection(*args, **kwargs):
  return __callback.pygsl_monte_miser_get_min_calls_per_bisection(*args, **kwargs)
pygsl_monte_miser_get_min_calls_per_bisection = __callback.pygsl_monte_miser_get_min_calls_per_bisection

def pygsl_monte_miser_get_dither(*args, **kwargs):
  return __callback.pygsl_monte_miser_get_dither(*args, **kwargs)
pygsl_monte_miser_get_dither = __callback.pygsl_monte_miser_get_dither

def pygsl_monte_miser_get_estimate_frac(*args, **kwargs):
  return __callback.pygsl_monte_miser_get_estimate_frac(*args, **kwargs)
pygsl_monte_miser_get_estimate_frac = __callback.pygsl_monte_miser_get_estimate_frac

def pygsl_monte_miser_get_alpha(*args, **kwargs):
  return __callback.pygsl_monte_miser_get_alpha(*args, **kwargs)
pygsl_monte_miser_get_alpha = __callback.pygsl_monte_miser_get_alpha

def pygsl_monte_miser_set_min_calls(*args, **kwargs):
  return __callback.pygsl_monte_miser_set_min_calls(*args, **kwargs)
pygsl_monte_miser_set_min_calls = __callback.pygsl_monte_miser_set_min_calls

def pygsl_monte_miser_set_min_calls_per_bisection(*args, **kwargs):
  return __callback.pygsl_monte_miser_set_min_calls_per_bisection(*args, **kwargs)
pygsl_monte_miser_set_min_calls_per_bisection = __callback.pygsl_monte_miser_set_min_calls_per_bisection

def pygsl_monte_miser_set_dither(*args, **kwargs):
  return __callback.pygsl_monte_miser_set_dither(*args, **kwargs)
pygsl_monte_miser_set_dither = __callback.pygsl_monte_miser_set_dither

def pygsl_monte_miser_set_estimate_frac(*args, **kwargs):
  return __callback.pygsl_monte_miser_set_estimate_frac(*args, **kwargs)
pygsl_monte_miser_set_estimate_frac = __callback.pygsl_monte_miser_set_estimate_frac

def pygsl_monte_miser_set_alpha(*args, **kwargs):
  return __callback.pygsl_monte_miser_set_alpha(*args, **kwargs)
pygsl_monte_miser_set_alpha = __callback.pygsl_monte_miser_set_alpha

def gsl_monte_miser_integrate(*args, **kwargs):
  return __callback.gsl_monte_miser_integrate(*args, **kwargs)
gsl_monte_miser_integrate = __callback.gsl_monte_miser_integrate

def gsl_monte_miser_alloc(*args, **kwargs):
  return __callback.gsl_monte_miser_alloc(*args, **kwargs)
gsl_monte_miser_alloc = __callback.gsl_monte_miser_alloc

def gsl_monte_miser_init(*args, **kwargs):
  return __callback.gsl_monte_miser_init(*args, **kwargs)
gsl_monte_miser_init = __callback.gsl_monte_miser_init

def gsl_monte_miser_free(*args, **kwargs):
  return __callback.gsl_monte_miser_free(*args, **kwargs)
gsl_monte_miser_free = __callback.gsl_monte_miser_free
GSL_VEGAS_MODE_IMPORTANCE = __callback.GSL_VEGAS_MODE_IMPORTANCE
GSL_VEGAS_MODE_IMPORTANCE_ONLY = __callback.GSL_VEGAS_MODE_IMPORTANCE_ONLY
GSL_VEGAS_MODE_STRATIFIED = __callback.GSL_VEGAS_MODE_STRATIFIED

def pygsl_monte_vegas_get_result(*args, **kwargs):
  return __callback.pygsl_monte_vegas_get_result(*args, **kwargs)
pygsl_monte_vegas_get_result = __callback.pygsl_monte_vegas_get_result

def pygsl_monte_vegas_get_sigma(*args, **kwargs):
  return __callback.pygsl_monte_vegas_get_sigma(*args, **kwargs)
pygsl_monte_vegas_get_sigma = __callback.pygsl_monte_vegas_get_sigma

def pygsl_monte_vegas_get_chisq(*args, **kwargs):
  return __callback.pygsl_monte_vegas_get_chisq(*args, **kwargs)
pygsl_monte_vegas_get_chisq = __callback.pygsl_monte_vegas_get_chisq

def pygsl_monte_vegas_get_alpha(*args, **kwargs):
  return __callback.pygsl_monte_vegas_get_alpha(*args, **kwargs)
pygsl_monte_vegas_get_alpha = __callback.pygsl_monte_vegas_get_alpha

def pygsl_monte_vegas_get_iterations(*args, **kwargs):
  return __callback.pygsl_monte_vegas_get_iterations(*args, **kwargs)
pygsl_monte_vegas_get_iterations = __callback.pygsl_monte_vegas_get_iterations

def pygsl_monte_vegas_get_stage(*args, **kwargs):
  return __callback.pygsl_monte_vegas_get_stage(*args, **kwargs)
pygsl_monte_vegas_get_stage = __callback.pygsl_monte_vegas_get_stage

def pygsl_monte_vegas_get_mode(*args, **kwargs):
  return __callback.pygsl_monte_vegas_get_mode(*args, **kwargs)
pygsl_monte_vegas_get_mode = __callback.pygsl_monte_vegas_get_mode

def pygsl_monte_vegas_get_verbose(*args, **kwargs):
  return __callback.pygsl_monte_vegas_get_verbose(*args, **kwargs)
pygsl_monte_vegas_get_verbose = __callback.pygsl_monte_vegas_get_verbose

def pygsl_monte_vegas_get_ostream(*args, **kwargs):
  return __callback.pygsl_monte_vegas_get_ostream(*args, **kwargs)
pygsl_monte_vegas_get_ostream = __callback.pygsl_monte_vegas_get_ostream

def pygsl_monte_vegas_set_result(*args, **kwargs):
  return __callback.pygsl_monte_vegas_set_result(*args, **kwargs)
pygsl_monte_vegas_set_result = __callback.pygsl_monte_vegas_set_result

def pygsl_monte_vegas_set_sigma(*args, **kwargs):
  return __callback.pygsl_monte_vegas_set_sigma(*args, **kwargs)
pygsl_monte_vegas_set_sigma = __callback.pygsl_monte_vegas_set_sigma

def pygsl_monte_vegas_set_chisq(*args, **kwargs):
  return __callback.pygsl_monte_vegas_set_chisq(*args, **kwargs)
pygsl_monte_vegas_set_chisq = __callback.pygsl_monte_vegas_set_chisq

def pygsl_monte_vegas_set_alpha(*args, **kwargs):
  return __callback.pygsl_monte_vegas_set_alpha(*args, **kwargs)
pygsl_monte_vegas_set_alpha = __callback.pygsl_monte_vegas_set_alpha

def pygsl_monte_vegas_set_iterations(*args, **kwargs):
  return __callback.pygsl_monte_vegas_set_iterations(*args, **kwargs)
pygsl_monte_vegas_set_iterations = __callback.pygsl_monte_vegas_set_iterations

def pygsl_monte_vegas_set_stage(*args, **kwargs):
  return __callback.pygsl_monte_vegas_set_stage(*args, **kwargs)
pygsl_monte_vegas_set_stage = __callback.pygsl_monte_vegas_set_stage

def pygsl_monte_vegas_set_mode(*args, **kwargs):
  return __callback.pygsl_monte_vegas_set_mode(*args, **kwargs)
pygsl_monte_vegas_set_mode = __callback.pygsl_monte_vegas_set_mode

def pygsl_monte_vegas_set_verbose(*args, **kwargs):
  return __callback.pygsl_monte_vegas_set_verbose(*args, **kwargs)
pygsl_monte_vegas_set_verbose = __callback.pygsl_monte_vegas_set_verbose

def pygsl_monte_vegas_set_ostream(*args, **kwargs):
  return __callback.pygsl_monte_vegas_set_ostream(*args, **kwargs)
pygsl_monte_vegas_set_ostream = __callback.pygsl_monte_vegas_set_ostream

def gsl_monte_vegas_integrate(*args, **kwargs):
  return __callback.gsl_monte_vegas_integrate(*args, **kwargs)
gsl_monte_vegas_integrate = __callback.gsl_monte_vegas_integrate

def gsl_monte_vegas_alloc(*args, **kwargs):
  return __callback.gsl_monte_vegas_alloc(*args, **kwargs)
gsl_monte_vegas_alloc = __callback.gsl_monte_vegas_alloc

def gsl_monte_vegas_init(*args, **kwargs):
  return __callback.gsl_monte_vegas_init(*args, **kwargs)
gsl_monte_vegas_init = __callback.gsl_monte_vegas_init

def gsl_monte_vegas_free(*args, **kwargs):
  return __callback.gsl_monte_vegas_free(*args, **kwargs)
gsl_monte_vegas_free = __callback.gsl_monte_vegas_free

def gsl_root_fsolver_alloc(*args, **kwargs):
  return __callback.gsl_root_fsolver_alloc(*args, **kwargs)
gsl_root_fsolver_alloc = __callback.gsl_root_fsolver_alloc

def gsl_root_fsolver_free(*args, **kwargs):
  return __callback.gsl_root_fsolver_free(*args, **kwargs)
gsl_root_fsolver_free = __callback.gsl_root_fsolver_free

def gsl_root_fdfsolver_alloc(*args, **kwargs):
  return __callback.gsl_root_fdfsolver_alloc(*args, **kwargs)
gsl_root_fdfsolver_alloc = __callback.gsl_root_fdfsolver_alloc

def gsl_root_fdfsolver_free(*args, **kwargs):
  return __callback.gsl_root_fdfsolver_free(*args, **kwargs)
gsl_root_fdfsolver_free = __callback.gsl_root_fdfsolver_free

def gsl_root_fsolver_set(*args, **kwargs):
  return __callback.gsl_root_fsolver_set(*args, **kwargs)
gsl_root_fsolver_set = __callback.gsl_root_fsolver_set

def gsl_root_fdfsolver_set(*args, **kwargs):
  return __callback.gsl_root_fdfsolver_set(*args, **kwargs)
gsl_root_fdfsolver_set = __callback.gsl_root_fdfsolver_set

def gsl_root_fsolver_name(*args, **kwargs):
  return __callback.gsl_root_fsolver_name(*args, **kwargs)
gsl_root_fsolver_name = __callback.gsl_root_fsolver_name

def gsl_root_fdfsolver_name(*args, **kwargs):
  return __callback.gsl_root_fdfsolver_name(*args, **kwargs)
gsl_root_fdfsolver_name = __callback.gsl_root_fdfsolver_name

def gsl_root_fsolver_iterate(*args, **kwargs):
  return __callback.gsl_root_fsolver_iterate(*args, **kwargs)
gsl_root_fsolver_iterate = __callback.gsl_root_fsolver_iterate

def gsl_root_fdfsolver_iterate(*args, **kwargs):
  return __callback.gsl_root_fdfsolver_iterate(*args, **kwargs)
gsl_root_fdfsolver_iterate = __callback.gsl_root_fdfsolver_iterate

def gsl_root_fsolver_root(*args, **kwargs):
  return __callback.gsl_root_fsolver_root(*args, **kwargs)
gsl_root_fsolver_root = __callback.gsl_root_fsolver_root

def gsl_root_fdfsolver_root(*args, **kwargs):
  return __callback.gsl_root_fdfsolver_root(*args, **kwargs)
gsl_root_fdfsolver_root = __callback.gsl_root_fdfsolver_root

def gsl_root_fsolver_x_lower(*args, **kwargs):
  return __callback.gsl_root_fsolver_x_lower(*args, **kwargs)
gsl_root_fsolver_x_lower = __callback.gsl_root_fsolver_x_lower

def gsl_root_fsolver_x_upper(*args, **kwargs):
  return __callback.gsl_root_fsolver_x_upper(*args, **kwargs)
gsl_root_fsolver_x_upper = __callback.gsl_root_fsolver_x_upper

def gsl_root_test_interval(*args, **kwargs):
  return __callback.gsl_root_test_interval(*args, **kwargs)
gsl_root_test_interval = __callback.gsl_root_test_interval

def gsl_root_test_delta(*args, **kwargs):
  return __callback.gsl_root_test_delta(*args, **kwargs)
gsl_root_test_delta = __callback.gsl_root_test_delta

def gsl_root_test_residual(*args, **kwargs):
  return __callback.gsl_root_test_residual(*args, **kwargs)
gsl_root_test_residual = __callback.gsl_root_test_residual

def gsl_min_fminimizer_alloc(*args, **kwargs):
  return __callback.gsl_min_fminimizer_alloc(*args, **kwargs)
gsl_min_fminimizer_alloc = __callback.gsl_min_fminimizer_alloc

def gsl_min_fminimizer_set(*args, **kwargs):
  return __callback.gsl_min_fminimizer_set(*args, **kwargs)
gsl_min_fminimizer_set = __callback.gsl_min_fminimizer_set

def gsl_min_fminimizer_set_with_values(*args, **kwargs):
  return __callback.gsl_min_fminimizer_set_with_values(*args, **kwargs)
gsl_min_fminimizer_set_with_values = __callback.gsl_min_fminimizer_set_with_values

def gsl_min_fminimizer_free(*args, **kwargs):
  return __callback.gsl_min_fminimizer_free(*args, **kwargs)
gsl_min_fminimizer_free = __callback.gsl_min_fminimizer_free

def gsl_min_fminimizer_name(*args, **kwargs):
  return __callback.gsl_min_fminimizer_name(*args, **kwargs)
gsl_min_fminimizer_name = __callback.gsl_min_fminimizer_name

def gsl_min_fminimizer_iterate(*args, **kwargs):
  return __callback.gsl_min_fminimizer_iterate(*args, **kwargs)
gsl_min_fminimizer_iterate = __callback.gsl_min_fminimizer_iterate

def gsl_min_fminimizer_minimum(*args, **kwargs):
  return __callback.gsl_min_fminimizer_minimum(*args, **kwargs)
gsl_min_fminimizer_minimum = __callback.gsl_min_fminimizer_minimum

def gsl_min_fminimizer_x_upper(*args, **kwargs):
  return __callback.gsl_min_fminimizer_x_upper(*args, **kwargs)
gsl_min_fminimizer_x_upper = __callback.gsl_min_fminimizer_x_upper

def gsl_min_fminimizer_x_lower(*args, **kwargs):
  return __callback.gsl_min_fminimizer_x_lower(*args, **kwargs)
gsl_min_fminimizer_x_lower = __callback.gsl_min_fminimizer_x_lower

def gsl_min_test_interval(*args, **kwargs):
  return __callback.gsl_min_test_interval(*args, **kwargs)
gsl_min_test_interval = __callback.gsl_min_test_interval

def gsl_multiroot_function_init(*args, **kwargs):
  return __callback.gsl_multiroot_function_init(*args, **kwargs)
gsl_multiroot_function_init = __callback.gsl_multiroot_function_init

def gsl_multiroot_function_init_fdf(*args, **kwargs):
  return __callback.gsl_multiroot_function_init_fdf(*args, **kwargs)
gsl_multiroot_function_init_fdf = __callback.gsl_multiroot_function_init_fdf

def gsl_multiroot_function_getf(*args, **kwargs):
  return __callback.gsl_multiroot_function_getf(*args, **kwargs)
gsl_multiroot_function_getf = __callback.gsl_multiroot_function_getf

def gsl_multiroot_function_fdf_getf(*args, **kwargs):
  return __callback.gsl_multiroot_function_fdf_getf(*args, **kwargs)
gsl_multiroot_function_fdf_getf = __callback.gsl_multiroot_function_fdf_getf

def gsl_multiroot_function_getx(*args, **kwargs):
  return __callback.gsl_multiroot_function_getx(*args, **kwargs)
gsl_multiroot_function_getx = __callback.gsl_multiroot_function_getx

def gsl_multiroot_function_fdf_getx(*args, **kwargs):
  return __callback.gsl_multiroot_function_fdf_getx(*args, **kwargs)
gsl_multiroot_function_fdf_getx = __callback.gsl_multiroot_function_fdf_getx

def gsl_multiroot_function_free(*args, **kwargs):
  return __callback.gsl_multiroot_function_free(*args, **kwargs)
gsl_multiroot_function_free = __callback.gsl_multiroot_function_free

def gsl_multiroot_function_free_fdf(*args, **kwargs):
  return __callback.gsl_multiroot_function_free_fdf(*args, **kwargs)
gsl_multiroot_function_free_fdf = __callback.gsl_multiroot_function_free_fdf

def gsl_multiroot_fsolver_alloc(*args, **kwargs):
  return __callback.gsl_multiroot_fsolver_alloc(*args, **kwargs)
gsl_multiroot_fsolver_alloc = __callback.gsl_multiroot_fsolver_alloc

def gsl_multiroot_fsolver_free(*args, **kwargs):
  return __callback.gsl_multiroot_fsolver_free(*args, **kwargs)
gsl_multiroot_fsolver_free = __callback.gsl_multiroot_fsolver_free

def gsl_multiroot_fsolver_set(*args, **kwargs):
  return __callback.gsl_multiroot_fsolver_set(*args, **kwargs)
gsl_multiroot_fsolver_set = __callback.gsl_multiroot_fsolver_set

def gsl_multiroot_fsolver_iterate(*args, **kwargs):
  return __callback.gsl_multiroot_fsolver_iterate(*args, **kwargs)
gsl_multiroot_fsolver_iterate = __callback.gsl_multiroot_fsolver_iterate

def gsl_multiroot_fsolver_name(*args, **kwargs):
  return __callback.gsl_multiroot_fsolver_name(*args, **kwargs)
gsl_multiroot_fsolver_name = __callback.gsl_multiroot_fsolver_name

def gsl_multiroot_fsolver_root(*args, **kwargs):
  return __callback.gsl_multiroot_fsolver_root(*args, **kwargs)
gsl_multiroot_fsolver_root = __callback.gsl_multiroot_fsolver_root

def gsl_multiroot_fdfsolver_alloc(*args, **kwargs):
  return __callback.gsl_multiroot_fdfsolver_alloc(*args, **kwargs)
gsl_multiroot_fdfsolver_alloc = __callback.gsl_multiroot_fdfsolver_alloc

def gsl_multiroot_fdfsolver_set(*args, **kwargs):
  return __callback.gsl_multiroot_fdfsolver_set(*args, **kwargs)
gsl_multiroot_fdfsolver_set = __callback.gsl_multiroot_fdfsolver_set

def gsl_multiroot_fdfsolver_iterate(*args, **kwargs):
  return __callback.gsl_multiroot_fdfsolver_iterate(*args, **kwargs)
gsl_multiroot_fdfsolver_iterate = __callback.gsl_multiroot_fdfsolver_iterate

def gsl_multiroot_fdfsolver_free(*args, **kwargs):
  return __callback.gsl_multiroot_fdfsolver_free(*args, **kwargs)
gsl_multiroot_fdfsolver_free = __callback.gsl_multiroot_fdfsolver_free

def gsl_multiroot_fdfsolver_name(*args, **kwargs):
  return __callback.gsl_multiroot_fdfsolver_name(*args, **kwargs)
gsl_multiroot_fdfsolver_name = __callback.gsl_multiroot_fdfsolver_name

def gsl_multiroot_fdfsolver_root(*args, **kwargs):
  return __callback.gsl_multiroot_fdfsolver_root(*args, **kwargs)
gsl_multiroot_fdfsolver_root = __callback.gsl_multiroot_fdfsolver_root

def gsl_multiroot_test_delta(*args, **kwargs):
  return __callback.gsl_multiroot_test_delta(*args, **kwargs)
gsl_multiroot_test_delta = __callback.gsl_multiroot_test_delta

def gsl_multiroot_test_residual(*args, **kwargs):
  return __callback.gsl_multiroot_test_residual(*args, **kwargs)
gsl_multiroot_test_residual = __callback.gsl_multiroot_test_residual

def gsl_multimin_function_init(*args, **kwargs):
  return __callback.gsl_multimin_function_init(*args, **kwargs)
gsl_multimin_function_init = __callback.gsl_multimin_function_init

def gsl_multimin_function_init_fdf(*args, **kwargs):
  return __callback.gsl_multimin_function_init_fdf(*args, **kwargs)
gsl_multimin_function_init_fdf = __callback.gsl_multimin_function_init_fdf

def gsl_multimin_function_free(*args, **kwargs):
  return __callback.gsl_multimin_function_free(*args, **kwargs)
gsl_multimin_function_free = __callback.gsl_multimin_function_free

def gsl_multimin_function_free_fdf(*args, **kwargs):
  return __callback.gsl_multimin_function_free_fdf(*args, **kwargs)
gsl_multimin_function_free_fdf = __callback.gsl_multimin_function_free_fdf

def gsl_multimin_fminimizer_f(*args, **kwargs):
  return __callback.gsl_multimin_fminimizer_f(*args, **kwargs)
gsl_multimin_fminimizer_f = __callback.gsl_multimin_fminimizer_f

def gsl_multimin_fminimizer_alloc(*args, **kwargs):
  return __callback.gsl_multimin_fminimizer_alloc(*args, **kwargs)
gsl_multimin_fminimizer_alloc = __callback.gsl_multimin_fminimizer_alloc

def gsl_multimin_fminimizer_set(*args, **kwargs):
  return __callback.gsl_multimin_fminimizer_set(*args, **kwargs)
gsl_multimin_fminimizer_set = __callback.gsl_multimin_fminimizer_set

def gsl_multimin_fminimizer_free(*args, **kwargs):
  return __callback.gsl_multimin_fminimizer_free(*args, **kwargs)
gsl_multimin_fminimizer_free = __callback.gsl_multimin_fminimizer_free

def gsl_multimin_fminimizer_name(*args, **kwargs):
  return __callback.gsl_multimin_fminimizer_name(*args, **kwargs)
gsl_multimin_fminimizer_name = __callback.gsl_multimin_fminimizer_name

def gsl_multimin_fminimizer_iterate(*args, **kwargs):
  return __callback.gsl_multimin_fminimizer_iterate(*args, **kwargs)
gsl_multimin_fminimizer_iterate = __callback.gsl_multimin_fminimizer_iterate

def gsl_multimin_fminimizer_x(*args, **kwargs):
  return __callback.gsl_multimin_fminimizer_x(*args, **kwargs)
gsl_multimin_fminimizer_x = __callback.gsl_multimin_fminimizer_x

def gsl_multimin_fminimizer_minimum(*args, **kwargs):
  return __callback.gsl_multimin_fminimizer_minimum(*args, **kwargs)
gsl_multimin_fminimizer_minimum = __callback.gsl_multimin_fminimizer_minimum

def gsl_multimin_fminimizer_size(*args, **kwargs):
  return __callback.gsl_multimin_fminimizer_size(*args, **kwargs)
gsl_multimin_fminimizer_size = __callback.gsl_multimin_fminimizer_size

def gsl_multimin_fdfminimizer_alloc(*args, **kwargs):
  return __callback.gsl_multimin_fdfminimizer_alloc(*args, **kwargs)
gsl_multimin_fdfminimizer_alloc = __callback.gsl_multimin_fdfminimizer_alloc

def gsl_multimin_fdfminimizer_set(*args, **kwargs):
  return __callback.gsl_multimin_fdfminimizer_set(*args, **kwargs)
gsl_multimin_fdfminimizer_set = __callback.gsl_multimin_fdfminimizer_set

def gsl_multimin_fdfminimizer_free(*args, **kwargs):
  return __callback.gsl_multimin_fdfminimizer_free(*args, **kwargs)
gsl_multimin_fdfminimizer_free = __callback.gsl_multimin_fdfminimizer_free

def gsl_multimin_fdfminimizer_name(*args, **kwargs):
  return __callback.gsl_multimin_fdfminimizer_name(*args, **kwargs)
gsl_multimin_fdfminimizer_name = __callback.gsl_multimin_fdfminimizer_name

def gsl_multimin_fdfminimizer_iterate(*args, **kwargs):
  return __callback.gsl_multimin_fdfminimizer_iterate(*args, **kwargs)
gsl_multimin_fdfminimizer_iterate = __callback.gsl_multimin_fdfminimizer_iterate

def gsl_multimin_fdfminimizer_restart(*args, **kwargs):
  return __callback.gsl_multimin_fdfminimizer_restart(*args, **kwargs)
gsl_multimin_fdfminimizer_restart = __callback.gsl_multimin_fdfminimizer_restart

def gsl_multimin_test_gradient(*args, **kwargs):
  return __callback.gsl_multimin_test_gradient(*args, **kwargs)
gsl_multimin_test_gradient = __callback.gsl_multimin_test_gradient

def gsl_multimin_test_size(*args, **kwargs):
  return __callback.gsl_multimin_test_size(*args, **kwargs)
gsl_multimin_test_size = __callback.gsl_multimin_test_size

def gsl_multimin_fdfminimizer_f(*args, **kwargs):
  return __callback.gsl_multimin_fdfminimizer_f(*args, **kwargs)
gsl_multimin_fdfminimizer_f = __callback.gsl_multimin_fdfminimizer_f

def gsl_multimin_fdfminimizer_x(*args, **kwargs):
  return __callback.gsl_multimin_fdfminimizer_x(*args, **kwargs)
gsl_multimin_fdfminimizer_x = __callback.gsl_multimin_fdfminimizer_x

def gsl_multimin_fdfminimizer_dx(*args, **kwargs):
  return __callback.gsl_multimin_fdfminimizer_dx(*args, **kwargs)
gsl_multimin_fdfminimizer_dx = __callback.gsl_multimin_fdfminimizer_dx

def gsl_multimin_fdfminimizer_gradient(*args, **kwargs):
  return __callback.gsl_multimin_fdfminimizer_gradient(*args, **kwargs)
gsl_multimin_fdfminimizer_gradient = __callback.gsl_multimin_fdfminimizer_gradient

def gsl_multimin_fdfminimizer_minimum(*args, **kwargs):
  return __callback.gsl_multimin_fdfminimizer_minimum(*args, **kwargs)
gsl_multimin_fdfminimizer_minimum = __callback.gsl_multimin_fdfminimizer_minimum

def gsl_multifit_function_init(*args, **kwargs):
  return __callback.gsl_multifit_function_init(*args, **kwargs)
gsl_multifit_function_init = __callback.gsl_multifit_function_init

def gsl_multifit_function_init_fdf(*args, **kwargs):
  return __callback.gsl_multifit_function_init_fdf(*args, **kwargs)
gsl_multifit_function_init_fdf = __callback.gsl_multifit_function_init_fdf

def gsl_multifit_fsolver_getdx(*args, **kwargs):
  return __callback.gsl_multifit_fsolver_getdx(*args, **kwargs)
gsl_multifit_fsolver_getdx = __callback.gsl_multifit_fsolver_getdx

def gsl_multifit_fsolver_getx(*args, **kwargs):
  return __callback.gsl_multifit_fsolver_getx(*args, **kwargs)
gsl_multifit_fsolver_getx = __callback.gsl_multifit_fsolver_getx

def gsl_multifit_fsolver_getf(*args, **kwargs):
  return __callback.gsl_multifit_fsolver_getf(*args, **kwargs)
gsl_multifit_fsolver_getf = __callback.gsl_multifit_fsolver_getf

def gsl_multifit_fdfsolver_getdx(*args, **kwargs):
  return __callback.gsl_multifit_fdfsolver_getdx(*args, **kwargs)
gsl_multifit_fdfsolver_getdx = __callback.gsl_multifit_fdfsolver_getdx

def gsl_multifit_fdfsolver_getx(*args, **kwargs):
  return __callback.gsl_multifit_fdfsolver_getx(*args, **kwargs)
gsl_multifit_fdfsolver_getx = __callback.gsl_multifit_fdfsolver_getx

def gsl_multifit_fdfsolver_getf(*args, **kwargs):
  return __callback.gsl_multifit_fdfsolver_getf(*args, **kwargs)
gsl_multifit_fdfsolver_getf = __callback.gsl_multifit_fdfsolver_getf

def gsl_multifit_fdfsolver_getJ(*args, **kwargs):
  return __callback.gsl_multifit_fdfsolver_getJ(*args, **kwargs)
gsl_multifit_fdfsolver_getJ = __callback.gsl_multifit_fdfsolver_getJ

def gsl_multifit_function_free(*args, **kwargs):
  return __callback.gsl_multifit_function_free(*args, **kwargs)
gsl_multifit_function_free = __callback.gsl_multifit_function_free

def gsl_multifit_function_free_fdf(*args, **kwargs):
  return __callback.gsl_multifit_function_free_fdf(*args, **kwargs)
gsl_multifit_function_free_fdf = __callback.gsl_multifit_function_free_fdf

def gsl_multifit_fsolver_alloc(*args, **kwargs):
  return __callback.gsl_multifit_fsolver_alloc(*args, **kwargs)
gsl_multifit_fsolver_alloc = __callback.gsl_multifit_fsolver_alloc

def gsl_multifit_fsolver_free(*args, **kwargs):
  return __callback.gsl_multifit_fsolver_free(*args, **kwargs)
gsl_multifit_fsolver_free = __callback.gsl_multifit_fsolver_free

def gsl_multifit_fsolver_set(*args, **kwargs):
  return __callback.gsl_multifit_fsolver_set(*args, **kwargs)
gsl_multifit_fsolver_set = __callback.gsl_multifit_fsolver_set

def gsl_multifit_fsolver_iterate(*args, **kwargs):
  return __callback.gsl_multifit_fsolver_iterate(*args, **kwargs)
gsl_multifit_fsolver_iterate = __callback.gsl_multifit_fsolver_iterate

def gsl_multifit_fsolver_name(*args, **kwargs):
  return __callback.gsl_multifit_fsolver_name(*args, **kwargs)
gsl_multifit_fsolver_name = __callback.gsl_multifit_fsolver_name

def gsl_multifit_fsolver_position(*args, **kwargs):
  return __callback.gsl_multifit_fsolver_position(*args, **kwargs)
gsl_multifit_fsolver_position = __callback.gsl_multifit_fsolver_position

def gsl_multifit_fdfsolver_alloc(*args, **kwargs):
  return __callback.gsl_multifit_fdfsolver_alloc(*args, **kwargs)
gsl_multifit_fdfsolver_alloc = __callback.gsl_multifit_fdfsolver_alloc

def gsl_multifit_fdfsolver_set(*args, **kwargs):
  return __callback.gsl_multifit_fdfsolver_set(*args, **kwargs)
gsl_multifit_fdfsolver_set = __callback.gsl_multifit_fdfsolver_set

def gsl_multifit_fdfsolver_iterate(*args, **kwargs):
  return __callback.gsl_multifit_fdfsolver_iterate(*args, **kwargs)
gsl_multifit_fdfsolver_iterate = __callback.gsl_multifit_fdfsolver_iterate

def gsl_multifit_fdfsolver_free(*args, **kwargs):
  return __callback.gsl_multifit_fdfsolver_free(*args, **kwargs)
gsl_multifit_fdfsolver_free = __callback.gsl_multifit_fdfsolver_free

def gsl_multifit_fdfsolver_name(*args, **kwargs):
  return __callback.gsl_multifit_fdfsolver_name(*args, **kwargs)
gsl_multifit_fdfsolver_name = __callback.gsl_multifit_fdfsolver_name

def gsl_multifit_fdfsolver_position(*args, **kwargs):
  return __callback.gsl_multifit_fdfsolver_position(*args, **kwargs)
gsl_multifit_fdfsolver_position = __callback.gsl_multifit_fdfsolver_position

def gsl_multifit_test_delta(*args, **kwargs):
  return __callback.gsl_multifit_test_delta(*args, **kwargs)
gsl_multifit_test_delta = __callback.gsl_multifit_test_delta

def gsl_multifit_test_gradient(*args, **kwargs):
  return __callback.gsl_multifit_test_gradient(*args, **kwargs)
gsl_multifit_test_gradient = __callback.gsl_multifit_test_gradient

def gsl_integration_workspace_alloc(*args, **kwargs):
  return __callback.gsl_integration_workspace_alloc(*args, **kwargs)
gsl_integration_workspace_alloc = __callback.gsl_integration_workspace_alloc

def gsl_integration_workspace_free(*args, **kwargs):
  return __callback.gsl_integration_workspace_free(*args, **kwargs)
gsl_integration_workspace_free = __callback.gsl_integration_workspace_free

def gsl_integration_workspace_get_size(*args, **kwargs):
  return __callback.gsl_integration_workspace_get_size(*args, **kwargs)
gsl_integration_workspace_get_size = __callback.gsl_integration_workspace_get_size

def gsl_integration_qaws_table_alloc(*args, **kwargs):
  return __callback.gsl_integration_qaws_table_alloc(*args, **kwargs)
gsl_integration_qaws_table_alloc = __callback.gsl_integration_qaws_table_alloc

def gsl_integration_qaws_table_set(*args, **kwargs):
  return __callback.gsl_integration_qaws_table_set(*args, **kwargs)
gsl_integration_qaws_table_set = __callback.gsl_integration_qaws_table_set

def gsl_integration_qaws_table_free(*args, **kwargs):
  return __callback.gsl_integration_qaws_table_free(*args, **kwargs)
gsl_integration_qaws_table_free = __callback.gsl_integration_qaws_table_free
GSL_INTEG_COSINE = __callback.GSL_INTEG_COSINE
GSL_INTEG_SINE = __callback.GSL_INTEG_SINE

def gsl_integration_qawo_table_alloc(*args, **kwargs):
  return __callback.gsl_integration_qawo_table_alloc(*args, **kwargs)
gsl_integration_qawo_table_alloc = __callback.gsl_integration_qawo_table_alloc

def gsl_integration_qawo_table_set(*args, **kwargs):
  return __callback.gsl_integration_qawo_table_set(*args, **kwargs)
gsl_integration_qawo_table_set = __callback.gsl_integration_qawo_table_set

def gsl_integration_qawo_table_set_length(*args, **kwargs):
  return __callback.gsl_integration_qawo_table_set_length(*args, **kwargs)
gsl_integration_qawo_table_set_length = __callback.gsl_integration_qawo_table_set_length

def gsl_integration_qawo_table_free(*args, **kwargs):
  return __callback.gsl_integration_qawo_table_free(*args, **kwargs)
gsl_integration_qawo_table_free = __callback.gsl_integration_qawo_table_free
GSL_INTEG_GAUSS15 = __callback.GSL_INTEG_GAUSS15
GSL_INTEG_GAUSS21 = __callback.GSL_INTEG_GAUSS21
GSL_INTEG_GAUSS31 = __callback.GSL_INTEG_GAUSS31
GSL_INTEG_GAUSS41 = __callback.GSL_INTEG_GAUSS41
GSL_INTEG_GAUSS51 = __callback.GSL_INTEG_GAUSS51
GSL_INTEG_GAUSS61 = __callback.GSL_INTEG_GAUSS61

def gsl_integration_qng(*args, **kwargs):
  return __callback.gsl_integration_qng(*args, **kwargs)
gsl_integration_qng = __callback.gsl_integration_qng

def gsl_integration_qag(*args, **kwargs):
  return __callback.gsl_integration_qag(*args, **kwargs)
gsl_integration_qag = __callback.gsl_integration_qag

def gsl_integration_qagi(*args, **kwargs):
  return __callback.gsl_integration_qagi(*args, **kwargs)
gsl_integration_qagi = __callback.gsl_integration_qagi

def gsl_integration_qagiu(*args, **kwargs):
  return __callback.gsl_integration_qagiu(*args, **kwargs)
gsl_integration_qagiu = __callback.gsl_integration_qagiu

def gsl_integration_qagil(*args, **kwargs):
  return __callback.gsl_integration_qagil(*args, **kwargs)
gsl_integration_qagil = __callback.gsl_integration_qagil

def gsl_integration_qags(*args, **kwargs):
  return __callback.gsl_integration_qags(*args, **kwargs)
gsl_integration_qags = __callback.gsl_integration_qags

def gsl_integration_qagp(*args, **kwargs):
  return __callback.gsl_integration_qagp(*args, **kwargs)
gsl_integration_qagp = __callback.gsl_integration_qagp

def gsl_integration_qawc(*args, **kwargs):
  return __callback.gsl_integration_qawc(*args, **kwargs)
gsl_integration_qawc = __callback.gsl_integration_qawc

def gsl_integration_qaws(*args, **kwargs):
  return __callback.gsl_integration_qaws(*args, **kwargs)
gsl_integration_qaws = __callback.gsl_integration_qaws

def gsl_integration_qawo(*args, **kwargs):
  return __callback.gsl_integration_qawo(*args, **kwargs)
gsl_integration_qawo = __callback.gsl_integration_qawo

def gsl_integration_qawf(*args, **kwargs):
  return __callback.gsl_integration_qawf(*args, **kwargs)
gsl_integration_qawf = __callback.gsl_integration_qawf

def gsl_cheb_alloc(*args, **kwargs):
  return __callback.gsl_cheb_alloc(*args, **kwargs)
gsl_cheb_alloc = __callback.gsl_cheb_alloc

def gsl_cheb_free(*args, **kwargs):
  return __callback.gsl_cheb_free(*args, **kwargs)
gsl_cheb_free = __callback.gsl_cheb_free

def gsl_cheb_init(*args, **kwargs):
  return __callback.gsl_cheb_init(*args, **kwargs)
gsl_cheb_init = __callback.gsl_cheb_init

def gsl_cheb_eval(*args, **kwargs):
  return __callback.gsl_cheb_eval(*args, **kwargs)
gsl_cheb_eval = __callback.gsl_cheb_eval

def gsl_cheb_eval_err(*args, **kwargs):
  return __callback.gsl_cheb_eval_err(*args, **kwargs)
gsl_cheb_eval_err = __callback.gsl_cheb_eval_err

def gsl_cheb_eval_n(*args, **kwargs):
  return __callback.gsl_cheb_eval_n(*args, **kwargs)
gsl_cheb_eval_n = __callback.gsl_cheb_eval_n

def gsl_cheb_eval_n_err(*args, **kwargs):
  return __callback.gsl_cheb_eval_n_err(*args, **kwargs)
gsl_cheb_eval_n_err = __callback.gsl_cheb_eval_n_err

def gsl_cheb_calc_deriv(*args, **kwargs):
  return __callback.gsl_cheb_calc_deriv(*args, **kwargs)
gsl_cheb_calc_deriv = __callback.gsl_cheb_calc_deriv

def gsl_cheb_calc_integ(*args, **kwargs):
  return __callback.gsl_cheb_calc_integ(*args, **kwargs)
gsl_cheb_calc_integ = __callback.gsl_cheb_calc_integ

def pygsl_cheb_get_coefficients(*args, **kwargs):
  return __callback.pygsl_cheb_get_coefficients(*args, **kwargs)
pygsl_cheb_get_coefficients = __callback.pygsl_cheb_get_coefficients

def pygsl_cheb_set_coefficients(*args, **kwargs):
  return __callback.pygsl_cheb_set_coefficients(*args, **kwargs)
pygsl_cheb_set_coefficients = __callback.pygsl_cheb_set_coefficients

def pygsl_cheb_get_a(*args, **kwargs):
  return __callback.pygsl_cheb_get_a(*args, **kwargs)
pygsl_cheb_get_a = __callback.pygsl_cheb_get_a

def pygsl_cheb_get_b(*args, **kwargs):
  return __callback.pygsl_cheb_get_b(*args, **kwargs)
pygsl_cheb_get_b = __callback.pygsl_cheb_get_b

def pygsl_cheb_set_a(*args, **kwargs):
  return __callback.pygsl_cheb_set_a(*args, **kwargs)
pygsl_cheb_set_a = __callback.pygsl_cheb_set_a

def pygsl_cheb_set_b(*args, **kwargs):
  return __callback.pygsl_cheb_set_b(*args, **kwargs)
pygsl_cheb_set_b = __callback.pygsl_cheb_set_b

def pygsl_cheb_get_order_sp(*args, **kwargs):
  return __callback.pygsl_cheb_get_order_sp(*args, **kwargs)
pygsl_cheb_get_order_sp = __callback.pygsl_cheb_get_order_sp

def pygsl_cheb_set_order_sp(*args, **kwargs):
  return __callback.pygsl_cheb_set_order_sp(*args, **kwargs)
pygsl_cheb_set_order_sp = __callback.pygsl_cheb_set_order_sp

def pygsl_cheb_get_f(*args, **kwargs):
  return __callback.pygsl_cheb_get_f(*args, **kwargs)
pygsl_cheb_get_f = __callback.pygsl_cheb_get_f

def pygsl_cheb_set_f(*args, **kwargs):
  return __callback.pygsl_cheb_set_f(*args, **kwargs)
pygsl_cheb_set_f = __callback.pygsl_cheb_set_f

def gsl_odeiv_step_alloc(*args, **kwargs):
  return __callback.gsl_odeiv_step_alloc(*args, **kwargs)
gsl_odeiv_step_alloc = __callback.gsl_odeiv_step_alloc

def gsl_odeiv_step_reset(*args, **kwargs):
  return __callback.gsl_odeiv_step_reset(*args, **kwargs)
gsl_odeiv_step_reset = __callback.gsl_odeiv_step_reset

def gsl_odeiv_step_free(*args, **kwargs):
  return __callback.gsl_odeiv_step_free(*args, **kwargs)
gsl_odeiv_step_free = __callback.gsl_odeiv_step_free

def gsl_odeiv_step_name(*args, **kwargs):
  return __callback.gsl_odeiv_step_name(*args, **kwargs)
gsl_odeiv_step_name = __callback.gsl_odeiv_step_name

def gsl_odeiv_step_order(*args, **kwargs):
  return __callback.gsl_odeiv_step_order(*args, **kwargs)
gsl_odeiv_step_order = __callback.gsl_odeiv_step_order
gsl_odeiv_hadj_dec = __callback.gsl_odeiv_hadj_dec
gsl_odeiv_hadj_inc = __callback.gsl_odeiv_hadj_inc
gsl_odeiv_hadj_nil = __callback.gsl_odeiv_hadj_nil

def gsl_odeiv_control_alloc(*args, **kwargs):
  return __callback.gsl_odeiv_control_alloc(*args, **kwargs)
gsl_odeiv_control_alloc = __callback.gsl_odeiv_control_alloc

def gsl_odeiv_control_init(*args, **kwargs):
  return __callback.gsl_odeiv_control_init(*args, **kwargs)
gsl_odeiv_control_init = __callback.gsl_odeiv_control_init

def gsl_odeiv_control_free(*args, **kwargs):
  return __callback.gsl_odeiv_control_free(*args, **kwargs)
gsl_odeiv_control_free = __callback.gsl_odeiv_control_free

def gsl_odeiv_control_name(*args, **kwargs):
  return __callback.gsl_odeiv_control_name(*args, **kwargs)
gsl_odeiv_control_name = __callback.gsl_odeiv_control_name

def gsl_odeiv_control_standard_new(*args, **kwargs):
  return __callback.gsl_odeiv_control_standard_new(*args, **kwargs)
gsl_odeiv_control_standard_new = __callback.gsl_odeiv_control_standard_new

def gsl_odeiv_control_y_new(*args, **kwargs):
  return __callback.gsl_odeiv_control_y_new(*args, **kwargs)
gsl_odeiv_control_y_new = __callback.gsl_odeiv_control_y_new

def gsl_odeiv_control_yp_new(*args, **kwargs):
  return __callback.gsl_odeiv_control_yp_new(*args, **kwargs)
gsl_odeiv_control_yp_new = __callback.gsl_odeiv_control_yp_new

def gsl_odeiv_evolve_alloc(*args, **kwargs):
  return __callback.gsl_odeiv_evolve_alloc(*args, **kwargs)
gsl_odeiv_evolve_alloc = __callback.gsl_odeiv_evolve_alloc

def gsl_odeiv_evolve_reset(*args, **kwargs):
  return __callback.gsl_odeiv_evolve_reset(*args, **kwargs)
gsl_odeiv_evolve_reset = __callback.gsl_odeiv_evolve_reset

def gsl_odeiv_evolve_free(*args, **kwargs):
  return __callback.gsl_odeiv_evolve_free(*args, **kwargs)
gsl_odeiv_evolve_free = __callback.gsl_odeiv_evolve_free

def gsl_multifit_linear_alloc(*args, **kwargs):
  return __callback.gsl_multifit_linear_alloc(*args, **kwargs)
gsl_multifit_linear_alloc = __callback.gsl_multifit_linear_alloc

def gsl_multifit_linear_free(*args, **kwargs):
  return __callback.gsl_multifit_linear_free(*args, **kwargs)
gsl_multifit_linear_free = __callback.gsl_multifit_linear_free

def gsl_multifit_linear(*args, **kwargs):
  return __callback.gsl_multifit_linear(*args, **kwargs)
gsl_multifit_linear = __callback.gsl_multifit_linear

def gsl_multifit_linear_svd(*args, **kwargs):
  return __callback.gsl_multifit_linear_svd(*args, **kwargs)
gsl_multifit_linear_svd = __callback.gsl_multifit_linear_svd

def gsl_multifit_wlinear(*args, **kwargs):
  return __callback.gsl_multifit_wlinear(*args, **kwargs)
gsl_multifit_wlinear = __callback.gsl_multifit_wlinear

def gsl_multifit_wlinear_svd(*args, **kwargs):
  return __callback.gsl_multifit_wlinear_svd(*args, **kwargs)
gsl_multifit_wlinear_svd = __callback.gsl_multifit_wlinear_svd

def gsl_multifit_linear_est(*args, **kwargs):
  return __callback.gsl_multifit_linear_est(*args, **kwargs)
gsl_multifit_linear_est = __callback.gsl_multifit_linear_est

def gsl_multifit_linear_est_matrix(*args, **kwargs):
  return __callback.gsl_multifit_linear_est_matrix(*args, **kwargs)
gsl_multifit_linear_est_matrix = __callback.gsl_multifit_linear_est_matrix

def gsl_fit_linear(*args, **kwargs):
  return __callback.gsl_fit_linear(*args, **kwargs)
gsl_fit_linear = __callback.gsl_fit_linear

def gsl_fit_wlinear(*args, **kwargs):
  return __callback.gsl_fit_wlinear(*args, **kwargs)
gsl_fit_wlinear = __callback.gsl_fit_wlinear

def gsl_fit_linear_est(*args, **kwargs):
  return __callback.gsl_fit_linear_est(*args, **kwargs)
gsl_fit_linear_est = __callback.gsl_fit_linear_est

def gsl_fit_mul(*args, **kwargs):
  return __callback.gsl_fit_mul(*args, **kwargs)
gsl_fit_mul = __callback.gsl_fit_mul

def gsl_fit_wmul(*args, **kwargs):
  return __callback.gsl_fit_wmul(*args, **kwargs)
gsl_fit_wmul = __callback.gsl_fit_wmul

def gsl_fit_mul_est(*args, **kwargs):
  return __callback.gsl_fit_mul_est(*args, **kwargs)
gsl_fit_mul_est = __callback.gsl_fit_mul_est
# This file is compatible with both classic and new-style classes.

cvar = __callback.cvar
gsl_root_fsolver_bisection = cvar.gsl_root_fsolver_bisection
gsl_root_fsolver_brent = cvar.gsl_root_fsolver_brent
gsl_root_fsolver_falsepos = cvar.gsl_root_fsolver_falsepos
gsl_root_fdfsolver_newton = cvar.gsl_root_fdfsolver_newton
gsl_root_fdfsolver_secant = cvar.gsl_root_fdfsolver_secant
gsl_root_fdfsolver_steffenson = cvar.gsl_root_fdfsolver_steffenson
gsl_min_fminimizer_goldensection = cvar.gsl_min_fminimizer_goldensection
gsl_min_fminimizer_brent = cvar.gsl_min_fminimizer_brent
gsl_multiroot_fsolver_dnewton = cvar.gsl_multiroot_fsolver_dnewton
gsl_multiroot_fsolver_broyden = cvar.gsl_multiroot_fsolver_broyden
gsl_multiroot_fsolver_hybrid = cvar.gsl_multiroot_fsolver_hybrid
gsl_multiroot_fsolver_hybrids = cvar.gsl_multiroot_fsolver_hybrids
gsl_multiroot_fdfsolver_newton = cvar.gsl_multiroot_fdfsolver_newton
gsl_multiroot_fdfsolver_gnewton = cvar.gsl_multiroot_fdfsolver_gnewton
gsl_multiroot_fdfsolver_hybridj = cvar.gsl_multiroot_fdfsolver_hybridj
gsl_multiroot_fdfsolver_hybridsj = cvar.gsl_multiroot_fdfsolver_hybridsj
gsl_multimin_fdfminimizer_steepest_descent = cvar.gsl_multimin_fdfminimizer_steepest_descent
gsl_multimin_fdfminimizer_conjugate_pr = cvar.gsl_multimin_fdfminimizer_conjugate_pr
gsl_multimin_fdfminimizer_conjugate_fr = cvar.gsl_multimin_fdfminimizer_conjugate_fr
gsl_multimin_fdfminimizer_vector_bfgs = cvar.gsl_multimin_fdfminimizer_vector_bfgs
gsl_multimin_fminimizer_nmsimplex = cvar.gsl_multimin_fminimizer_nmsimplex
gsl_multifit_gradient = __callback.gsl_multifit_gradient
gsl_multifit_covar = __callback.gsl_multifit_covar
gsl_multifit_fdfsolver_lmder = cvar.gsl_multifit_fdfsolver_lmder
gsl_multifit_fdfsolver_lmsder = cvar.gsl_multifit_fdfsolver_lmsder
gsl_odeiv_step_rk2 = cvar.gsl_odeiv_step_rk2
gsl_odeiv_step_rk4 = cvar.gsl_odeiv_step_rk4
gsl_odeiv_step_rkf45 = cvar.gsl_odeiv_step_rkf45
gsl_odeiv_step_rkck = cvar.gsl_odeiv_step_rkck
gsl_odeiv_step_rk8pd = cvar.gsl_odeiv_step_rk8pd
gsl_odeiv_step_rk2imp = cvar.gsl_odeiv_step_rk2imp
gsl_odeiv_step_rk4imp = cvar.gsl_odeiv_step_rk4imp
gsl_odeiv_step_bsimp = cvar.gsl_odeiv_step_bsimp
gsl_odeiv_step_gear1 = cvar.gsl_odeiv_step_gear1
gsl_odeiv_step_gear2 = cvar.gsl_odeiv_step_gear2
gsl_odeiv_step_apply = __callback.gsl_odeiv_step_apply
gsl_odeiv_control_hadjust = __callback.gsl_odeiv_control_hadjust
gsl_odeiv_evolve_apply = __callback.gsl_odeiv_evolve_apply
gsl_odeiv_evolve_apply_vector = __callback.gsl_odeiv_evolve_apply_vector

